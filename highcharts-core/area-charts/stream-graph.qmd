---
title: "Stream Graph Demo"
---

This is a demo of a stream graph.

Highcharts Demos: [Streamgraph](https://www.highcharts.com/demo/streamgraph)

# Load packages

```{r}
#| label: load-packages
#| output: false

library(tidyr)
library(dplyr)
library(forcats)
library(highcharter)
```

# Build data

```{r}
#| label: build-data

df <- tibble(
  winter_olympic_games = c(
    "",
    "1924 Chamonix",
    "1928 St. Moritz",
    "1932 Lake Placid",
    "1936 Garmisch-Partenkirchen",
    "1940 <i>Cancelled (Sapporo)</i>",
    "1944 <i>Cancelled (Cortina d\"Ampezzo)</i>",
    "1948 St. Moritz",
    "1952 Oslo",
    "1956 Cortina d\"Ampezzo",
    "1960 Squaw Valley",
    "1964 Innsbruck",
    "1968 Grenoble",
    "1972 Sapporo",
    "1976 Innsbruck",
    "1980 Lake Placid",
    "1984 Sarajevo",
    "1988 Calgary",
    "1992 Albertville",
    "1994 Lillehammer",
    "1998 Nagano",
    "2002 Salt Lake City",
    "2006 Turin",
    "2010 Vancouver",
    "2014 Sochi"
  ),
  Finland = c(
    0, 11, 4, 3, 6, 0, 0, 6, 9, 7, 8, 10, 5, 5, 7, 9, 13, 7,
    7, 6, 12, 7, 9, 5, 5
  ),
  Austria = c(
    0, 3, 4, 2, 4, 0, 0, 8, 8, 11, 6, 12, 11, 5, 6, 7, 1, 10,
    21, 9, 17, 17, 23, 16, 17
  ),
  Sweden = c(
    0, 2, 5, 3, 7, 0, 0, 10, 4, 10, 7, 7, 8, 4, 2, 4, 8, 6, 4,
    3, 3, 7, 14, 11, 15
  ),
  Norway = c(
    0, 17, 15, 10, 15, 0, 0, 10, 16, 4, 6, 15, 14, 12, 7, 10,
    9, 5, 20, 26, 25, 25, 19, 23, 26
  ),
  `U.S.` = c(
    0, 4, 6, 12, 4, 0, 0, 9, 11, 7, 10, 7, 7, 8, 10, 12, 8, 6,
    11, 13, 13, 34, 25, 37, 28
  ),
  `East Germany` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 5, 14, 19, 23, 24, 25,
    0, 0, 0, 0, 0, 0, 0
  ),
  `West Germany` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 7, 5, 10, 5, 4, 8, 0,
    0, 0, 0, 0, 0, 0
  ),
  Germany = c(
    0, 0, 1, 2, 6, 0, 0, 0, 7, 2, 8, 9, 0, 0, 0, 0, 0, 0, 26,
    24, 29, 36, 29, 30, 19
  ),
  Netherlands = c(
    0, 0, 0, 0, 0, 0, 0, 0, 3, 0, 2, 2, 9, 9, 6, 4, 0, 7, 4,
    4, 11, 8, 9, 8, 24
  ),
  Italy = c(
    0, 0, 0, 0, 0, 0, 0, 1, 2, 3, 1, 4, 4, 5, 4, 2, 2, 5, 14,
    20, 10, 13, 11, 5, 8
  ),
  Canada = c(
    0, 1, 1, 7, 1, 0, 0, 3, 2, 3, 4, 3, 3, 1, 3, 2, 4, 5, 7,
    13, 15, 17, 24, 26, 25
  ),
  Switzerland = c(
    0, 3, 1, 1, 3, 0, 0, 10, 2, 6, 2, 0, 6, 10, 5, 5, 5, 15,
    3, 9, 7, 11, 14, 9, 11
  ),
  `Great Britain` = c(
    0, 4, 1, 0, 3, 0, 0, 2, 1, 0, 0, 1, 0, 0, 1, 1, 1, 0, 0,
    2, 1, 2, 1, 1, 4
  ),
  France = c(
    0, 3, 1, 1, 1, 0, 0, 5, 1, 0, 3, 7, 9, 3, 1, 1, 3, 2, 9,
    5, 8, 11, 9, 11, 15
  ),
  Hungary = c(
    0, 0, 0, 1, 1, 0, 0, 1, 1, 1, 0, 0, 0, 0, 0, 1, 0, 0, 0,
    0, 0, 0, 0, 0, 0
  ),
  `Unified Team` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 23,
    0, 0, 0, 0, 0, 0
  ),
  `Soviet Union` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 16, 21, 25, 13, 16, 27, 22, 25,
    29, 0, 0, 0, 0, 0, 0, 0
  ),
  Russia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    23, 18, 13, 22, 15, 33
  ),
  Japan = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 3, 0, 1, 1, 1, 7,
    5, 10, 2, 1, 5, 8
  ),
  Czechoslovakia = c(
    0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 1, 1, 4, 3, 1, 1, 6, 3, 3,
    0, 0, 0, 0, 0, 0
  ),
  Poland = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 2, 0, 0, 1, 0, 0, 0, 0, 0,
    0, 0, 2, 2, 6, 6
  ),
  Spain = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1,
    0, 0, 0, 0, 0, 0
  ),
  China = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 3,
    3, 8, 8, 11, 11, 9
  ),
  `South Korea` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 4,
    6, 6, 4, 11, 14, 8
  ),
  `Czech Republic` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 3, 3, 4, 6, 8
  ),
  Belarus = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    2, 2, 1, 1, 3, 6
  ),
  Kazakhstan = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    3, 2, 0, 0, 1, 1
  ),
  Bulgaria = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0,
    0, 1, 3, 1, 0, 0
  ),
  Denmark = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 0, 0
  ),
  Ukraine = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    2, 1, 0, 2, 0, 2
  ),
  Australia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    1, 1, 2, 2, 3, 3
  ),
  Belgium = c(
    0, 1, 1, 0, 0, 0, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 1, 0, 0, 0, 0
  ),
  Romania = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0
  ),
  Liechtenstein = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 2, 1, 0,
    0, 0, 0, 0, 0, 0
  ),
  Yugoslavia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 3, 0,
    0, 0, 0, 0, 0, 0
  ),
  Luxembourg = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2,
    0, 0, 0, 0, 0, 0
  ),
  `New Zealand` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1,
    0, 0, 0, 0, 0, 0
  ),
  `North Korea` = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 1, 0, 0, 0, 0, 0, 0, 1,
    0, 0, 0, 0, 0, 0
  ),
  Slovakia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 1, 3, 1
  ),
  Croatia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 4, 3, 3, 1
  ),
  Slovenia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    3, 0, 1, 0, 3, 8
  ),
  Latvia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 1, 2, 4
  ),
  Estonia = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 3, 3, 1, 0
  ),
  Uzbekistan = c(
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    1, 0, 0, 0, 0, 0
  )
) %>% 
  pivot_longer(
    cols = !winter_olympic_games,
    names_to = "country",
    values_to = "medals"
  ) %>% 
  mutate(
    winter_olympic_games = as_factor(winter_olympic_games),
    country = as_factor(country),
    medals = as.integer(medals)
  )
```

# Set options

```{r}
#| label: set-options

options(
  highcharter.chart = list(
    accessiblility = list(
      enabled = TRUE,
      linkedDescription = "Streamgraphs are a type of stacked area charts where the areas are displaced around a central axis. It is often used for displaying compound volume across different categories or over time. This demo visualizes the number of medals earned in the Winter Olympic Games for each participating country since 1924, using a relative scale."
    )
  )
)
```

# Stream graph

```{r}
#| label: stream-graph

highchartzero() %>% 
  hc_add_dependency("modules/streamgraph.js") %>%
  hc_add_dependency("modules/series-label.js") %>% 
  hc_add_dependency("modules/annotations.js") %>% 
  hc_add_dependency("modules/exporting.js") %>%
  hc_add_dependency("modules/export-data.js") %>%
  hc_add_dependency("modules/accessibility.js") %>%
  hc_chart(
    marginBottom = 30,
    zoomType = "x"
  ) %>% 
  hc_colors(
    # Ensure connected countries have similar colors
    colors = list(
      JS("Highcharts.getOptions().colors[0]"),
      JS("Highcharts.getOptions().colors[1]"),
      JS("Highcharts.getOptions().colors[2]"),
      JS("Highcharts.getOptions().colors[3]"),
      JS("Highcharts.getOptions().colors[4]"),
      # East Germany, West Germany and Germany
      JS("Highcharts.color(Highcharts.getOptions().colors[5]).brighten(0.2).get()"),
      JS("Highcharts.color(Highcharts.getOptions().colors[5]).brighten(0.1).get()"),
      JS("Highcharts.getOptions().colors[5]"),
      JS("Highcharts.getOptions().colors[6]"),
      JS("Highcharts.getOptions().colors[7]"),
      JS("Highcharts.getOptions().colors[8]"),
      JS("Highcharts.getOptions().colors[9]"),
      JS("Highcharts.getOptions().colors[0]"),
      JS("Highcharts.getOptions().colors[1]"),
      JS("Highcharts.getOptions().colors[3]"),
      # Soviet Union, Russia
      JS("Highcharts.color(Highcharts.getOptions().colors[2]).brighten(0.1).get()"),
      JS("Highcharts.color(Highcharts.getOptions().colors[2]).brighten(0.2).get()"),
      JS("Highcharts.color(Highcharts.getOptions().colors[2]).brighten(0.3).get()")
    )
  ) %>%
  hc_title(
    floating = TRUE,
    align = "left",
    text = "Winter Olympic Medal Wins"
  ) %>% 
  hc_subtitle(
    floating = TRUE,
    align = "left",
    y = 30,
    text = "Source: <a href='https://www.sports-reference.com/olympics/winter/1924/'>sports-reference.com</a>"
  ) %>% 
  hc_xAxis(
    title = list(
      text = NULL
    ),
    maxPadding = 0,
    type = "category",
    crosshair = TRUE,
    labels = list(
      align = "left",
      reserveSpace = FALSE,
      rotation = 270
    ),
    lineWidth = 0,
    margin = 20,
    tickWidth = 0
  ) %>% 
  hc_yAxis(
    visible = FALSE,
    startOnTick = FALSE,
    endOnTick = FALSE
  ) %>% 
  hc_legend(
    enabled = FALSE
  ) %>% 
  hc_annotations(
    list(
      labels = list(
        list(
          point = list(
            x = 5.5,
            xAxis = 0,
            y = 30,
            yAxis = 0),
            text = "Cancelled<br>during<br>World War II"),
            list(
              point = list(
                x = 18,
                xAxis = 0,
                y = 90,
                yAxis = 0
              ),
              text = "Soviet Union fell,<br>Germany united"
            )
        ),
        labelOptions = list(
          backgroundColor = "rgba(255, 255, 255, 0.5)",
          borderColor = "silver"
        )
    )
  ) %>% 
  hc_plotOptions(
    series = list(
      label = list(
        minFontSize = 5,
        maxFontSize = 15,
        style = list(
          color = "rgba(255, 255, 255, 0.75)"
        )
      ),
      accessibility = list(
        exposeAsGroupOnly = TRUE
      )
    )
  ) %>% 
  hc_add_series(
    data = df,
    type = "streamgraph",
    hcaes(x = winter_olympic_games, y = medals, group = country)
  ) %>% 
  hc_exporting(
    sourceWidth = 800,
    sourceHeight = 600
  )
```
