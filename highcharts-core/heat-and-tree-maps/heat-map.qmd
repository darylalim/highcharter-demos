---
title: "Heat Map Demo"
---

This is a demo of a heat map.

Highcharts Demos: [Heat map](https://www.highcharts.com/demo/heatmap)

# Load packages

```{r}
#| label: load-packages
#| output: false

library(tibble)
library(dplyr)
library(forcats)
library(highcharter)
```

# Build data

```{r}
#| label: build-data

df <- tibble(
  c(0, 0, 10), c(0, 1, 19), c(0, 2, 8), c(0, 3, 24), c(0, 4, 67), 
  c(1, 0, 92), c(1, 1, 58), c(1, 2, 78), c(1, 3, 117), c(1, 4, 48), 
  c(2, 0, 35), c(2, 1, 15), c(2, 2, 123), c(2, 3, 64), c(2, 4, 52), 
  c(3, 0, 72), c(3, 1, 132), c(3, 2, 114), c(3, 3, 19), c(3, 4, 16), 
  c(4, 0, 38), c(4, 1, 5), c(4, 2, 8), c(4, 3, 117), c(4, 4, 115), 
  c(5, 0, 88), c(5, 1, 32), c(5, 2, 12), c(5, 3, 6), c(5, 4, 120), 
  c(6, 0, 13), c(6, 1, 44), c(6, 2, 88), c(6, 3, 98), c(6, 4, 96), 
  c(7, 0, 31), c(7, 1, 1), c(7, 2, 82), c(7, 3, 32), c(7, 4, 30), 
  c(8, 0, 85), c(8, 1, 97), c(8, 2, 123), c(8, 3, 64), c(8, 4, 84), 
  c(9, 0, 47), c(9, 1, 114), c(9, 2, 31), c(9, 3, 48), c(9, 4, 91)
) %>% 
  t() %>% 
  as_tibble() %>% 
  rename(
    employee = V1,
    weekday = V2,
    sales = V3
  ) %>% 
  mutate(
    employee = case_when(
      employee == 0 ~ "Alexander",
      employee == 1 ~ "Marie",
      employee == 2 ~ "Maximilian",
      employee == 3 ~ "Sophia",
      employee == 4 ~ "Lukas",
      employee == 5 ~ "Maria",
      employee == 6 ~ "Leon",
      employee == 7 ~ "Anna",
      employee == 8 ~ "Tim",
      employee == 9 ~ "Laura"
    ),
    weekday = case_when(
      weekday == 0 ~ "Monday",
      weekday == 1 ~ "Tuesday",
      weekday == 2 ~ "Wednesday",
      weekday == 3 ~ "Thursday",
      weekday == 4 ~ "Friday"
    )
  ) %>% 
  mutate(
    employee = as_factor(employee),
    weekday = as_factor(weekday),
    sales = as.integer(sales)
  )
```

# Set options

```{r}
#| label: set-options

options(
  highcharter.chart = list(
    accessibility = list(
      enabled = TRUE,
      linkedDescription = "Heatmap showing employee data per weekday. Heatmaps are commonly used to visualize hot spots within data sets, and to show patterns or correlations. Due to their compact nature, they are often used with large sets of data.",
      point = list(
        descriptionFormat = "{(add index 1)}. {series.xAxis.categories.(x)} sales {series.yAxis.categories.(y)}, {value}."
      )
    )
  )
)
```

# Highcharts Version 11 default color palette

```{r}
#| label: version-11-colors

colors_v11 <- c("#2caffe", "#544fc5", "#00e272", "#fe6a35", "#6b8abc", "#d568fb", "#2ee0ca", "#fa4b42", "#feb56a", "#91e8e1")
```

# Heat map

```{r}
#| label: heat-map

highchartzero() %>% 
  hc_add_dependency("modules/heatmap.js") %>% 
  hc_add_dependency("modules/exporting.js") %>% 
  hc_add_dependency("modules/export-data.js") %>% 
  hc_add_dependency("modules/accessibility.js") %>% 
  hc_colors(colors = colors_v11) %>% 
  hc_chart(
    marginTop = 40,
    marginBottom = 80,
    plotBorderWidth = 1
  ) %>% 
  hc_title(
    text = "Sales per employee per weekday",
    style = list(
      fontSize = "1em"
    )
  ) %>% 
  hc_xAxis(
    categories = unique(df$employee),
    title = list(
      text = NULL
    )
  ) %>% 
  hc_yAxis(
    categories = unique(df$weekday),
    title = list(
      text = FALSE
    ),
    reversed = TRUE
  ) %>% 
  hc_colorAxis(
    min = 0,
    minColor = "#FFFFFF",
    maxColor = "#2caffe"
  ) %>% 
  hc_legend(
    align = "right",
    layout = "vertical",
    margin = 0,
    verticalAlign = "top",
    y = 25,
    symbolHeight = 280
  ) %>% 
  hc_tooltip(
    pointFormat = "<b>{point.employee}</b> sold<br><b>{point.value}</b> items on<br><b>{point.weekday}</b>"
  ) %>% 
  hc_add_series(
    data = df,
    type = "heatmap", 
    hcaes(x = employee, y = weekday, value = sales),
    name = "Sales per employee",
    borderWidth = 1,
    dataLabels = list(
      enabled = TRUE,
      color = "#000000"
    )
  ) %>% 
  hc_responsive(
    rules = list(
      list(
        condition = list(
          maxWidth = 500
        ),
        chartOptions = list(
          yAxis = list(
            labels = list(
              format = "{substr value 0 1}"
            )
          )
        )
      )
    )
  )
```
